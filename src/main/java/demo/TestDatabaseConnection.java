package demo;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.jdbc.core.JdbcTemplate;

import javax.sql.DataSource;

/**
 * Test class ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi database
 * Ch·∫°y class n√†y ƒë·ªÉ verify connection t·ªõi Aiven MySQL
 */
@SpringBootApplication
public class TestDatabaseConnection implements CommandLineRunner {

    private final DataSource dataSource;
    private final JdbcTemplate jdbcTemplate;

    public TestDatabaseConnection(DataSource dataSource, JdbcTemplate jdbcTemplate) {
        this.dataSource = dataSource;
        this.jdbcTemplate = jdbcTemplate;
    }

    public static void main(String[] args) {
        SpringApplication.run(TestDatabaseConnection.class, args);
    }

    @Override
    public void run(String... args) throws Exception {
        System.out.println("\n========================================");
        System.out.println("üîç KI·ªÇM TRA K·∫æT N·ªêI DATABASE");
        System.out.println("========================================\n");

        try {
            // Test 1: Ki·ªÉm tra DataSource
            System.out.println("‚úì DataSource: " + dataSource.getClass().getName());
            
            // Test 2: L·∫•y connection v√† ki·ªÉm tra
            var connection = dataSource.getConnection();
            System.out.println("‚úì Connection th√†nh c√¥ng!");
            System.out.println("  - Database: " + connection.getCatalog());
            System.out.println("  - URL: " + connection.getMetaData().getURL());
            System.out.println("  - Driver: " + connection.getMetaData().getDriverName());
            System.out.println("  - Version: " + connection.getMetaData().getDriverVersion());
            
            // Test 3: Th·ª±c hi·ªán query ƒë∆°n gi·∫£n
            String result = jdbcTemplate.queryForObject("SELECT 'K·∫øt n·ªëi th√†nh c√¥ng!' as message", String.class);
            System.out.println("‚úì Query test: " + result);
            
            // Test 4: Ki·ªÉm tra MySQL version
            String mysqlVersion = jdbcTemplate.queryForObject("SELECT VERSION()", String.class);
            System.out.println("‚úì MySQL Version: " + mysqlVersion);
            
            // Test 5: Li·ªát k√™ c√°c b·∫£ng hi·ªán c√≥
            System.out.println("\nüìä C√°c b·∫£ng trong database:");
            var tables = jdbcTemplate.queryForList(
                "SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE()",
                String.class
            );
            
            if (tables.isEmpty()) {
                System.out.println("  (Ch∆∞a c√≥ b·∫£ng n√†o - s·∫Ω ƒë∆∞·ª£c t·∫°o khi ch·∫°y ·ª©ng d·ª•ng)");
            } else {
                tables.forEach(table -> System.out.println("  - " + table));
            }
            
            connection.close();
            
            System.out.println("\n========================================");
            System.out.println("‚úÖ T·∫§T C·∫¢ TESTS ƒê√É PASS!");
            System.out.println("========================================\n");
            
        } catch (Exception e) {
            System.err.println("\n========================================");
            System.err.println("‚ùå L·ªñI K·∫æT N·ªêI DATABASE");
            System.err.println("========================================");
            System.err.println("Chi ti·∫øt l·ªói: " + e.getMessage());
            e.printStackTrace();
            System.err.println("\nüí° Ki·ªÉm tra l·∫°i:");
            System.err.println("  1. URL, username, password trong application.properties");
            System.err.println("  2. Firewall/Network c√≥ cho ph√©p k·∫øt n·ªëi t·ªõi Aiven");
            System.err.println("  3. SSL configuration");
            System.err.println("========================================\n");
        }
        
        // Tho√°t sau khi test
        System.exit(0);
    }
}
